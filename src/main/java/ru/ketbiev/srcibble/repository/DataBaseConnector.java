package ru.ketbiev.srcibble.repository;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import java.sql.*;

@Component
public class DataBaseConnector {

    private String urlDB;
    private String userDB;
    private String passwordDB;

    public DataBaseConnector(@Value("${urlDB}") String urlDB,
                             @Value("${userDB}") String userDB,
                             @Value("${passwordDB}") String passwordDB) {
        try {
            Class.forName ("org.postgresql.Driver");
            Connection con = DriverManager.getConnection(urlDB, userDB, passwordDB);
            DatabaseMetaData dma = con.getMetaData();

            // Печать сообщения об успешном соединении
            System.out.println ("\n*** SQLConnection completed ***");
            System.out.println("Connected to - " + dma.getURL());
            System.out.println("Driver       - " + dma.getDriverName());
            System.out.println("Version      - " + dma.getDriverVersion());
            System.out.println("\n");

            // Закрыть соединение
            con.close();

            this.urlDB = urlDB;
            this.userDB = userDB;
            this.passwordDB = passwordDB;
        } catch (SQLException e) {
            System.out.println ("\n*** SQLException caught ***\n");
            while (e != null) {
                System.out.println ("SQLState: " + e.getSQLState ());
                System.out.println ("Message: " + e.getMessage ());
                System.out.println ("Vendor: " + e.getErrorCode ());
                e = e.getNextException ();
            }
        } catch (java.lang.Exception ex) {
            ex.printStackTrace ();
        }
    }

    public void doGet() {
        try {
            Connection con = DriverManager.getConnection(urlDB, userDB, passwordDB);
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * from users");
            while (rs.next()) {
                System.out.println(rs.getString("id"));
            }
//            st.executeUpdate("CREATE TABLE User (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY, login VARCHAR(20) NOT NULL);");
//            st.executeUpdate("INSERT INTO user (login) value(test user)");
//            st.executeUpdate("INSERT INTO user SET login = 'test user 2'");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
